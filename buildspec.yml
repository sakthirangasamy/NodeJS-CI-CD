version: 0.2
env:
  variables:
    APP_NAME: "brain-tasks-app"
    ECR_REPO: "brain-tasks-app-repo"
    AWS_REGION: "ap-south-1"
    CLUSTER_NAME: "my-cluster"
    
phases:
  pre_build:
    commands:
      - echo "Configuring AWS CLI..."
      - aws configure set region ap-south-1
      
      - echo "Logging in to ECR..."
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 346701285224.dkr.ecr.ap-south-1.amazonaws.com

      - echo "Installing kubectl..."
      - curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl

  build:
    commands:
      - echo "Building Docker image..."
      - docker build -t brain-tasks-app .
      - docker tag brain-tasks-app:latest 346701285224.dkr.ecr.ap-south-1.amazonaws.com/brain-tasks-app-repo:latest

  post_build:
    commands:
      - echo "Pushing image to ECR..."
      - docker push 346701285224.dkr.ecr.ap-south-1.amazonaws.com/brain-tasks-app-repo:latest

      - echo "Updating kubeconfig for EKS..."
      - aws eks update-kubeconfig --name my-cluster --region ap-south-1 --kubeconfig /root/.kube/config
      - export KUBECONFIG=/root/.kube/config

      - echo "Applying Kubernetes manifests..."
      - kubectl apply -f deployment.yaml
      - kubectl apply -f service.yaml
      - kubectl rollout status deployment/brain-tasks-app

      - echo "Fetching LoadBalancer External URL..."
      - |
        LOAD_BALANCER=$(kubectl get svc brain-tasks-service -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
        echo "App deployed at: http://$LOAD_BALANCER"

artifacts:
  files:
    - appspec.yml
    - deployment.yaml
    - service.yaml
